// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v3.14.0
// source: cmd/agent/proto/agent.proto

package agent

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message for requesting power on a cluster
type PowerOnClusterRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccountName     string                 `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	Region          string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	ClusterId       string                 `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	InstancesIdList []string               `protobuf:"bytes,4,rep,name=instances_id_list,json=instancesIdList,proto3" json:"instances_id_list,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PowerOnClusterRequest) Reset() {
	*x = PowerOnClusterRequest{}
	mi := &file_cmd_agent_proto_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOnClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOnClusterRequest) ProtoMessage() {}

func (x *PowerOnClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_agent_proto_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerOnClusterRequest.ProtoReflect.Descriptor instead.
func (*PowerOnClusterRequest) Descriptor() ([]byte, []int) {
	return file_cmd_agent_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *PowerOnClusterRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *PowerOnClusterRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PowerOnClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *PowerOnClusterRequest) GetInstancesIdList() []string {
	if x != nil {
		return x.InstancesIdList
	}
	return nil
}

// Message for answering to PowerOnClusterRequests
type PowerOnClusterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// if error != 0, there was an error during the action. If error == 0, the request was sucessfully completed
	Error int32 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	// message with additional info
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PowerOnClusterResponse) Reset() {
	*x = PowerOnClusterResponse{}
	mi := &file_cmd_agent_proto_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOnClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOnClusterResponse) ProtoMessage() {}

func (x *PowerOnClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_agent_proto_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerOnClusterResponse.ProtoReflect.Descriptor instead.
func (*PowerOnClusterResponse) Descriptor() ([]byte, []int) {
	return file_cmd_agent_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *PowerOnClusterResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *PowerOnClusterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Message for requesting power off a cluster
type PowerOffClusterRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccountName     string                 `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	Region          string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	ClusterId       string                 `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	InstancesIdList []string               `protobuf:"bytes,4,rep,name=instances_id_list,json=instancesIdList,proto3" json:"instances_id_list,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PowerOffClusterRequest) Reset() {
	*x = PowerOffClusterRequest{}
	mi := &file_cmd_agent_proto_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOffClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOffClusterRequest) ProtoMessage() {}

func (x *PowerOffClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_agent_proto_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerOffClusterRequest.ProtoReflect.Descriptor instead.
func (*PowerOffClusterRequest) Descriptor() ([]byte, []int) {
	return file_cmd_agent_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *PowerOffClusterRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *PowerOffClusterRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PowerOffClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *PowerOffClusterRequest) GetInstancesIdList() []string {
	if x != nil {
		return x.InstancesIdList
	}
	return nil
}

// Message for answering to PowerOffClusterRequests
type PowerOffClusterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// if error != 0, there was an error during the action. If error == 0, the request was sucessfully completed
	Error int32 `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	// message with additional info
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PowerOffClusterResponse) Reset() {
	*x = PowerOffClusterResponse{}
	mi := &file_cmd_agent_proto_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PowerOffClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerOffClusterResponse) ProtoMessage() {}

func (x *PowerOffClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_agent_proto_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerOffClusterResponse.ProtoReflect.Descriptor instead.
func (*PowerOffClusterResponse) Descriptor() ([]byte, []int) {
	return file_cmd_agent_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *PowerOffClusterResponse) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *PowerOffClusterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_cmd_agent_proto_agent_proto protoreflect.FileDescriptor

var file_cmd_agent_proto_agent_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6d, 0x64, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x15, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x16, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9e,
	0x01, 0x0a, 0x16, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x49, 0x0a, 0x17, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xaf, 0x01, 0x0a, 0x0c, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07,
	0x2e, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_agent_proto_agent_proto_rawDescOnce sync.Once
	file_cmd_agent_proto_agent_proto_rawDescData = file_cmd_agent_proto_agent_proto_rawDesc
)

func file_cmd_agent_proto_agent_proto_rawDescGZIP() []byte {
	file_cmd_agent_proto_agent_proto_rawDescOnce.Do(func() {
		file_cmd_agent_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_agent_proto_agent_proto_rawDescData)
	})
	return file_cmd_agent_proto_agent_proto_rawDescData
}

var file_cmd_agent_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_cmd_agent_proto_agent_proto_goTypes = []any{
	(*PowerOnClusterRequest)(nil),   // 0: agent.PowerOnClusterRequest
	(*PowerOnClusterResponse)(nil),  // 1: agent.PowerOnClusterResponse
	(*PowerOffClusterRequest)(nil),  // 2: agent.PowerOffClusterRequest
	(*PowerOffClusterResponse)(nil), // 3: agent.PowerOffClusterResponse
}
var file_cmd_agent_proto_agent_proto_depIdxs = []int32{
	0, // 0: agent.AgentService.PowerOnCluster:input_type -> agent.PowerOnClusterRequest
	2, // 1: agent.AgentService.PowerOffCluster:input_type -> agent.PowerOffClusterRequest
	1, // 2: agent.AgentService.PowerOnCluster:output_type -> agent.PowerOnClusterResponse
	3, // 3: agent.AgentService.PowerOffCluster:output_type -> agent.PowerOffClusterResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cmd_agent_proto_agent_proto_init() }
func file_cmd_agent_proto_agent_proto_init() {
	if File_cmd_agent_proto_agent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_agent_proto_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cmd_agent_proto_agent_proto_goTypes,
		DependencyIndexes: file_cmd_agent_proto_agent_proto_depIdxs,
		MessageInfos:      file_cmd_agent_proto_agent_proto_msgTypes,
	}.Build()
	File_cmd_agent_proto_agent_proto = out.File
	file_cmd_agent_proto_agent_proto_rawDesc = nil
	file_cmd_agent_proto_agent_proto_goTypes = nil
	file_cmd_agent_proto_agent_proto_depIdxs = nil
}
