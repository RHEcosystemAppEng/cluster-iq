package dto

import (
	"time"

	"github.com/RHEcosystemAppEng/cluster-iq/internal/inventory"
)

// TODO: comments
type ClusterDTOResponse struct {
	ClusterID             string                   `json:"clusterID"`         // Cluster's Name
	ClusterName           string                   `json:"clusterName"`       // Cluster's Name
	InfraID               string                   `json:"infra_id"`          // InfraID is the infrastructure ID generated by openshift-installer during the installation.Cluster (Could be undefined)
	Provider              inventory.CloudProvider  `json:"provider"`          // Infrastructure provider identifier.
	Status                inventory.ResourceStatus `json:"status"`            // Defines the status of the cluster if its infrastructure is running or not or it was removed
	Region                string                   `json:"region"`            // The region of the infrastructure provider in which the cluster is deployed
	AccountID             string                   `json:"accountID"`         // Account ID which this cluster belongs to
	ConsoleLink           string                   `json:"consoleLink"`       // Openshift Console URL. Might not be accesible if its protected
	InstanceCount         int                      `json:"instanceCount"`     // Amount of instances in the cluster
	LastScanTS            time.Time                `json:"lastScanTimestamp"` // Last scan timestamp of the cluster
	CreatedAt             time.Time                `json:"creationTimestamp"` // Timestamp when the cluster was created
	Age                   int                      `json:"age"`               // Amount of days since the cluster was created
	Owner                 string                   `json:"owner"`             // Cluster's owner
	TotalCost             float64                  `json:"totalCost"`
	Last15DaysCost        float64                  `json:"last15DaysCost"`
	LastMonthCost         float64                  `json:"lastMonthCost"`
	CurrentMonthSoFarCost float64                  `json:"currentMonthSoFarCost"`
}

// TODO: comments
// ClusterDTOResponseList represents the API response containing a list of accounts.
type ClusterDTOResponseList struct {
	Count    int                  `json:"count,omitempty"` // Number of accounts, omitted if empty.
	Clusters []ClusterDTOResponse `json:"clusters"`        // List of accounts.
}

// TODO: comments
// NewClusterDTOResponseList creates a new ClusterDTOResponseList instance.
// It ensures that an empty array is returned if the input account list is empty.
//
// Parameters:
// - accounts: A slice of inventory.Account.
//
// Returns:
// - A pointer to an ClusterDTOResponseList.
func NewClusterDTOResponseList(clusters []ClusterDTOResponse) *ClusterDTOResponseList {
	response := ClusterDTOResponseList{Clusters: clusters}

	// Count only set list length > 0
	if count := len(clusters); count > 0 {
		response.Count = count
	}

	return &response
}
