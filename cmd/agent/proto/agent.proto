syntax = "proto3";

package agent;

option go_package = "./agent";

// gRPC service for the Agent
service AgentService {
  rpc PowerOnCluster (PowerOnClusterRequest) returns (PowerOnClusterResponse);
  rpc PowerOffCluster (PowerOffClusterRequest) returns (PowerOffClusterResponse);
}

// Message for requesting power on a cluster
message PowerOnClusterRequest {
  string account_name = 1;
  string region = 2;
  string cluster_id = 3;
  repeated string instances_id_list = 4;
}

// Message for answering to PowerOnClusterRequests
message PowerOnClusterResponse {
  // if error != 0, there was an error during the action. If error == 0, the request was sucessfully completed
  int32 error = 1;
  // message with additional info
  string message = 2;
}

// Message for requesting power off a cluster
message PowerOffClusterRequest {
  string account_name = 1;
  string region = 2;
  string cluster_id = 3;
  repeated string instances_id_list = 4;
}

// Message for answering to PowerOffClusterRequests
message PowerOffClusterResponse {
  // if error != 0, there was an error during the action. If error == 0, the request was sucessfully completed
  int32 error = 1;
  // message with additional info
  string message = 2;
}
