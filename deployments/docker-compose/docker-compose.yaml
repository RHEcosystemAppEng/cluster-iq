version: "3.7"
services:
  console:
    image: quay.io/ecosystem-appeng/cluster-iq-console:latest
    container_name: console
    restart: always
    depends_on:
      api:
        condition: service_healthy
    ports:
      - 8080:3000
    environment:
      REACT_APP_CIQ_API_URL: "http://api:8080"
  api:
    image: quay.io/ecosystem-appeng/cluster-iq-api:latest
    container_name: api
    restart: always
    depends_on:
      init-pgsql:
        condition: service_healthy
    ports:
      - 8081:8080
    environment:
      CIQ_API_LISTEN_URL: "0.0.0.0:8080"
      CIQ_DB_URL: "postgresql://user:password@pgsql:5432/clusteriq?sslmode=disable"
      CIQ_LOG_LEVEL: "DEBUG"

  scanner:
    image: quay.io/ecosystem-appeng/cluster-iq-scanner:latest
    container_name: scanner
    restart: "no"
    environment:
      CIQ_API_URL: "http://api:8080/api/v1"
      CIQ_CREDS_FILE: "/credentials"
      CIQ_LOG_LEVEL: "DEBUG"
    volumes:
      - ../../secrets/credentials:/credentials:ro

  pgsql:
    image: registry.redhat.io/rhel8/postgresql-12@sha256:a6230cba71eb33e67fffc21161929de4bc618bc5e2f21fbec3c4c227205c2061
    container_name: pgsql
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRESQL_USER: "user"
      POSTGRESQL_PASSWORD: "password"
      POSTGRESQL_DATABASE: "clusteriq"
      POSTGRESQL_ADMIN_PASSWORD: "admin"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  init-pgsql:
    image: registry.redhat.io/rhel8/postgresql-12@sha256:a6230cba71eb33e67fffc21161929de4bc618bc5e2f21fbec3c4c227205c2061
    container_name: init-pgsql
    restart: "no"
    command: |
      sh -c 'while true; do psql postgresql://user:password@pgsql:5432/clusteriq -c "SELECT true" && break || sleep 2; done; psql postgresql://user:password@pgsql:5432/clusteriq < /init.sql'
    volumes:
      - ./../../db/sql/init.sql:/init.sql
    depends_on:
      pgsql:
        condition: service_healthy
