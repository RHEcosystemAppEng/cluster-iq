apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    {{- include "cluster-iq.labels" . | nindent 4 }}
    {{- include "cluster-iq.componentLabels" "api" | nindent 4 }}
spec:
  {{- if not .Values.api.autoscaling.enabled }} # If HPA enabled, removing replicas to avoid escalation issues
  replicas: {{ .Values.api.replicaCount | default 1}}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cluster-iq.selectorLabels" . | nindent 6 }}
      {{- include "cluster-iq.componentLabels" "api" | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cluster-iq.labels" . | nindent 8 }}
        {{- with .Values.api.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "cluster-iq.componentLabels" "api" | nindent 8 }}
    spec:
      {{- with .Values.api.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cluster-iq.apiServiceAccountName" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          envFrom:
          - configMapRef:
              name: api
          env:
          - name: CIQ_DB_URL
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: POSTGRESQL_CONNECTION_STRING
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: {{ .Values.api.service.name }}
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /api/v1/healthcheck
              port: {{ .Values.api.service.port }}
            {{- toYaml .Values.api.startupProbe | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /api/v1/healthcheck
              port: {{ .Values.api.service.port }}
            {{- toYaml .Values.api.readinessProbe | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /api/v1/healthcheck
              port: {{ .Values.api.service.port }}
            {{- toYaml .Values.api.livenessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          {{- with .Values.api.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.api.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
