---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: cluster-iq
    component: api
spec:
  selector:
    matchLabels:
      app: cluster-iq
      component: api
  replicas: 1
  template:
    metadata:
      labels:
        app: cluster-iq
        component: api
    spec:
      serviceAccountName: api-cluster-iq
      containers:
        - name: api
          image: quay.io/ecosystem-appeng/cluster-iq-api:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          envFrom:
            - configMapRef:
                name: config
          ports:
            - name: api
              containerPort: 8080
        - name: oauth-proxy
          image: registry.redhat.io/openshift4/ose-oauth-proxy:v4.13
          imagePullPolicy: IfNotPresent
          args:
             - -provider=openshift
             - -https-address=:8443
             - -http-address=
             - -email-domain=*
             - -tls-cert=/etc/tls/private/tls.crt
             - -tls-key=/etc/tls/private/tls.key
             - -upstream=http://localhost:8080
             - -cookie-secret=ClusterIQ-Cookie
             - -openshift-service-account=cluster-iq
             - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          ports:
            - name: oauth-proxy
              containerPort: 8443
          volumeMounts:
            - mountPath: /etc/tls/private
              name: api-tls
      volumes:
        - name: api-tls
          secret:
            defaultMode: 420
            secretName: api-tls



---
apiVersion: v1
kind: Service
metadata:
  name: api
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: api-tls
  labels:
    app: cluster-iq
    component: api
spec:
  selector:
    app: cluster-iq
    component: api
  ports:
    - name: api
      protocol: TCP
      port: 8080
      targetPort: api
    - name: oauth-proxy
      protocol: TCP
      port: 8443
      targetPort: oauth-proxy


---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: api
  labels:
    app: cluster-iq
    component: api
spec:
  to:
    kind: Service
    name: api
    weight: 100
  port:
    targetPort: api
  tls:
    termination: reencrypt
    insecureEdgeTerminationPolicy: Redirect
