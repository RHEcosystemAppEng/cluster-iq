## Build
# vim: set ft=dockerfile :
####################
FROM golang:1.22.10 AS builder

# Build arguments
ARG VERSION
ARG COMMIT

# Versions for Protobuf and gRPC
ENV PROTOC_VERSION=29.3
ENV PROTOC_GEN_GO_VERSION=v1.36.2
ENV PROTOC_GEN_GO_GRPC_VERSION=v1.5.1

# Installing ProtoBuf 29.3
RUN apt-get update && apt-get install -y --no-install-recommends \
    unzip \
    curl && \
    curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip && \
    unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d /usr/local && \
    rm -f protoc-${PROTOC_VERSION}-linux-x86_64.zip && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Installing protoc-gen-go and protoc-gen-go-grpc
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@${PROTOC_GEN_GO_VERSION} && \
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@${PROTOC_GEN_GO_GRPC_VERSION}

# Adding /go/bin to path so the 'protoc-gen-go' can be found
ENV PATH="${PATH}:/go/bin"

# Code copy
WORKDIR /app
COPY . .

# Installing swagger
RUN go install github.com/swaggo/swag/cmd/swag@latest && \
  export PATH=$PATH:$(go env GOPATH)/bin && \
  swag init --generalInfo ./cmd/api/server.go --parseDependency --output ./cmd/api/docs
# gRPC code generation
RUN mkdir ./generated && \
  protoc --go_out=./generated --go-grpc_out=./generated ./cmd/agent/proto/agent.proto
# API building
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o cluster-iq-api -ldflags "-X main.version=${VERSION} -X main.commit=${COMMIT}" ./cmd/api/*.go

## Run
####################
FROM registry.access.redhat.com/ubi8/ubi-micro:8.10-15

# Labels
LABEL version="v0.3"
LABEL description="ClusterIQ API"

# Binary
COPY --from=builder /app/cluster-iq-api /cluster-iq-api

ENV CIQ_API_URL="http://api:8443/api/v1"
ENV CIQ_DB_URL="postgresql://user:password@pgsql:5432/clusteriq?sslmode=disable"

EXPOSE 8443

ENTRYPOINT ["/cluster-iq-api"]
