## Build
# vim: set ft=dockerfile :
####################
FROM golang:1.23.9 AS builder

# Build arguments
ARG VERSION
ARG COMMIT

# Versions for Protobuf and gRPC
ENV PROTOC_VERSION=29.3
ENV PROTOC_GEN_GO_VERSION=v1.36.2
ENV PROTOC_GEN_GO_GRPC_VERSION=v1.5.1

# Installing ProtoBuf 29.3
RUN apt-get update && apt-get install -y --no-install-recommends \
    unzip \
    curl && \
    curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip && \
    unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d /usr/local && \
    rm -f protoc-${PROTOC_VERSION}-linux-x86_64.zip && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Installing protoc-gen-go and protoc-gen-go-grpc
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@${PROTOC_GEN_GO_VERSION} && \
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@${PROTOC_GEN_GO_GRPC_VERSION}

# Adding /go/bin to path so the 'protoc-gen-go' can be found
ENV PATH="${PATH}:/go/bin"

# Code copy
WORKDIR /app
COPY . .

# gRPC code generation
RUN mkdir -p ./generated && \
  protoc --go_out=./generated --go-grpc_out=./generated ./cmd/agent/proto/agent.proto
# Agent building
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o cluster-iq-agent -ldflags "-X main.version=${VERSION} -X main.commit=${COMMIT}" ./cmd/agent

## Run
####################
FROM registry.access.redhat.com/ubi8/ubi-micro:8.10-15

# Labels
LABEL version="v0.3"
LABEL description="ClusterIQ cloud provider Cloud Agent"

# Binary
COPY --from=builder /app/cluster-iq-agent /cluster-iq-agent
# CA Certs to access AWS domains
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

# Default config
ENV CIQ_CREDS_FILE: "/credentials"
ENV CIQ_LOG_LEVEL: "DEBUG"

ENTRYPOINT ["/cluster-iq-agent"]
