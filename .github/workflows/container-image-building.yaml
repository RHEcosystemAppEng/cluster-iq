name: Cluster IQ Container image building

on:
  push:
    branches:
      - main
      - release-.*
      - release-.*-rc-.*
  pull_request:
    branches:
      - main
      - release-.*
      - release-.*-rc-.*

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract Go Version from go.mod
        id: go_version
        run: echo "GO_VERSION=$(awk '/^go /{print $2}' go.mod)" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Check formatting
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not properly formatted:"
            gofmt -l .
            exit 1
          fi
      - name: Set up golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.2

  setup:
    runs-on: ubuntu-latest
    needs: golangci
    permissions:
      contents: read
      packages: write
    outputs:
      IMAGE_TAG: ${{ steps.vars.outputs.IMAGE_TAG }}
      COMMIT: ${{ steps.vars.outputs.COMMIT }}
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine Image Tags
        id: vars
        run: |
          # Checking if the event comes from PR or Branch
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "COMMIT=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
            echo "BRANCH_NAME=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
          else
            echo "COMMIT=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
            echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi

          # Getting IMAGE_TAG
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            IMAGE_TAG="latest"
          else
            IMAGE_TAG=${COMMIT}
          fi
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_OUTPUT

          # Getting version tag if available
          GIT_TAG=$(git tag --points-at HEAD | head -n 1)
          if [[ -n "$GIT_TAG" ]]; then
            echo "VERSION=$GIT_TAG" >> $GITHUB_OUTPUT
          fi

          echo "Building Tags:"
          echo "  * COMMIT: ${COMMIT}"
          echo "  * BRANCH: ${BRANCH_NAME}"
          echo "  * VERSION: ${GIT_TAG}"
          echo "  * IMAGE_TAG: ${IMAGE_TAG}"

  api:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Quay.io
        run: |
          echo "${{ secrets.QUAY_PASSWORD }}" | podman login quay.io -u "${{ secrets.QUAY_USERNAME }}" --password-stdin

      - name: Container image building
        run: |
          echo "Building API (${{ needs.setup.outputs.IMAGE_TAG }})"
          podman build \
            --platform linux/amd64 \
            --build-arg VERSION=${{ needs.setup.outputs.VERSION }} \
            --build-arg COMMIT=${{ needs.setup.outputs.COMMIT }} \
            -t quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${{ needs.setup.outputs.COMMIT }} \
            -f ./deployments/containerfiles/Containerfile-api .

      - name: Tagging images
        run: |
          podman tag \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${{ needs.setup.outputs.COMMIT }} \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${{ needs.setup.outputs.IMAGE_TAG }}

      - name: Container image pushing
        run: |
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${{ needs.setup.outputs.COMMIT }}
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${{ needs.setup.outputs.IMAGE_TAG }}

      - name: Generating fixed version image
        if: ${{ needs.setup.outputs.VERSION != '' && needs.setup.outputs.VERSION != null }}
        run: |
          echo "Building Tagged version image: ${{ needs.setup.outputs.VERSION }}"
          podman tag \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${{ needs.setup.outputs.COMMIT }} \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${{ needs.setup.outputs.VERSION }}
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${{ needs.setup.outputs.VERSION }}

      - name: Logout from Quay.io
        run: |
          podman logout quay.io

  agent:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Quay.io
        run: |
          echo "${{ secrets.QUAY_PASSWORD }}" | podman login quay.io -u "${{ secrets.QUAY_USERNAME }}" --password-stdin

      - name: Container image building
        run: |
          echo "Building Agent (${{ needs.setup.outputs.IMAGE_TAG }})"
          podman build \
            --platform linux/amd64 \
            --build-arg VERSION=${{ needs.setup.outputs.VERSION }} \
            --build-arg COMMIT=${{ needs.setup.outputs.COMMIT }} \
            -t quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${{ needs.setup.outputs.COMMIT }} \
            -f ./deployments/containerfiles/Containerfile-agent .

      - name: Tagging images
        run: |
          podman tag \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${{ needs.setup.outputs.COMMIT }} \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${{ needs.setup.outputs.IMAGE_TAG }}

      - name: Container image pushing
        run: |
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${{ needs.setup.outputs.COMMIT }}
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${{ needs.setup.outputs.IMAGE_TAG }}

      - name: Generating fixed version image
        if: ${{ needs.setup.outputs.VERSION != '' && needs.setup.outputs.VERSION != null }}
        run: |
          echo "Building Tagged version image: ${{ needs.setup.outputs.VERSION }}"
          podman tag \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${{ needs.setup.outputs.COMMIT }} \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${{ needs.setup.outputs.VERSION }}
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${{ needs.setup.outputs.VERSION }}

      - name: Logout from Quay.io
        run: |
          podman logout quay.io

  scanner:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Quay.io
        run: |
          echo "${{ secrets.QUAY_PASSWORD }}" | podman login quay.io -u "${{ secrets.QUAY_USERNAME }}" --password-stdin

      - name: Container image building
        run: |
          echo "Building Scanner (${{ needs.setup.outputs.IMAGE_TAG }})"
          podman build \
            --platform linux/amd64 \
            --build-arg VERSION=${{ needs.setup.outputs.VERSION }} \
            --build-arg COMMIT=${{ needs.setup.outputs.COMMIT }} \
            -t quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${{ needs.setup.outputs.COMMIT }} \
            -f ./deployments/containerfiles/Containerfile-scanner .

      - name: Tagging images
        run: |
          podman tag \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${{ needs.setup.outputs.COMMIT }} \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${{ needs.setup.outputs.IMAGE_TAG }}

      - name: Container image pushing
        run: |
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${{ needs.setup.outputs.COMMIT }}
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${{ needs.setup.outputs.IMAGE_TAG }}

      - name: Generating fixed version image
        if: ${{ needs.setup.outputs.VERSION != '' && needs.setup.outputs.VERSION != null }}
        run: |
          echo "Building Tagged version image: ${{ needs.setup.outputs.VERSION }}"
          podman tag \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${{ needs.setup.outputs.COMMIT }} \
            quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${{ needs.setup.outputs.VERSION }}
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${{ needs.setup.outputs.VERSION }}

      - name: Logout from Quay.io
        run: |
          podman logout quay.io

  final:
    runs-on: ubuntu-latest
    needs:
      - setup
      - api
      - agent
      - scanner
    steps:
      - name: Validating
        run: |
          podman pull quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${{ needs.setup.outputs.COMMIT }}
          podman pull quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${{ needs.setup.outputs.COMMIT }}
          podman pull quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${{ needs.setup.outputs.COMMIT }}
