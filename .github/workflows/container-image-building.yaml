name: Cluster IQ Container image building

on:
  push:
    branches:
      - main
      - release-.*
      - release-.*-rc-.*
      - feature/gh-actions-122
  pull_request:
    branches:
      - main
      - release-.*
      - release-.*-rc-.*

jobs:
  setup:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt -y install podman

      - name: Determine Image Tags
        id: vars
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG="latest"
          else
            TAG=$(echo "${{ github.ref }}" | sed 's/refs\/heads\///' | tr '/' '-')
          fi
          echo "IMAGE_TAG=${TAG}" >> $GITHUB_ENV

      - name: Get Container Image build arguments
        run: |
          echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "VERSION=$(cat ./VERSION)" >> $GITHUB_ENV


  api:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      packages: write

    steps:
      - name: Container image building
        run: |
          echo "Building API (${IMAGE_TAG})"
          podman build \
            --platform linux/amd64 \
            --build-arg VERSION=${VERSION} \
            --build-arg COMMIT=${COMMIT} \
            -t quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${IMAGE_TAG} \
            -f ./deployments/containerfiles/Containerfile-api .

      - name: Login to Quay.io
        run: |
          echo "${{ secrets.QUAY_PASSWORD }}" | podman login quay.io -u "${{ secrets.QUAY_USERNAME }}" --password-stdin

      - name: Container image pushing
        run: |
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-api:${IMAGE_TAG}

      - name: Logout from Quay.io
        if: always()
        run: |
          podman logout

  agent:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      packages: write

    steps:
      - name: Container image building
        run: |
          echo "Building Agent (${IMAGE_TAG})"
          podman build \
            --platform linux/amd64 \
            --build-arg VERSION=${VERSION} \
            --build-arg COMMIT=${COMMIT} \
            -t quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${IMAGE_TAG} \
            -f ./deployments/containerfiles/Containerfile-agent .

      - name: Login to Quay.io
        run: |
          echo "${{ secrets.QUAY_PASSWORD }}" | podman login quay.io -u "${{ secrets.QUAY_USERNAME }}" --password-stdin

      - name: Container image pushing
        run: |
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-agent:${IMAGE_TAG}

      - name: Logout from Quay.io
        if: always()
        run: |
          podman logout

  scanner:
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      contents: read
      packages: write

    steps:
      - name: Container image building
        run: |
          echo "Building Scanner (${IMAGE_TAG})"
          podman build \
            --platform linux/amd64 \
            --build-arg VERSION=${VERSION} \
            --build-arg COMMIT=${COMMIT} \
            -t quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${IMAGE_TAG} \
            -f ./deployments/containerfiles/Containerfile-scanner .

      - name: Login to Quay.io
        run: |
          echo "${{ secrets.QUAY_PASSWORD }}" | podman login quay.io -u "${{ secrets.QUAY_USERNAME }}" --password-stdin

      - name: Container image pushing
        run: |
          podman push quay.io/${{ secrets.QUAY_ORG_NAME }}/cluster-iq-scanner:${IMAGE_TAG}

      - name: Logout from Quay.io
        if: always()
        run: |
          podman logout
