name: Pull Request Validation

on:
  pull_request:

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Go Version from go.mod
        id: go_version
        run: echo "GO_VERSION=$(awk '/^go /{print $2}' go.mod)" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Check formatting
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not properly formatted:"
            gofmt -l .
            exit 1
          fi

      - name: Set up golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.5

  tests:
    runs-on: ubuntu-latest
    needs: golangci
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Go Version from go.mod
        id: go_version
        run: echo "GO_VERSION=$(awk '/^go /{print $2}' go.mod)" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install podman and podman-compose + protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y podman python3-pip
          pip3 install --user podman-compose
          echo "$HOME/.local/bin" >> $GITHUB_PATH

          VERSION=21.12
          ARCH=linux-x86_64
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v${VERSION}/protoc-${VERSION}-${ARCH}.zip
          unzip -o protoc-${VERSION}-${ARCH}.zip -d $HOME/.protoc
          echo "$HOME/.protoc/bin" >> $GITHUB_PATH

      - name: Run Go Unit Tests
        run: |
          make go-tests

      - name: Run Go Integration Tests
        run: |
          make build
          make go-integration-tests 

      - name: Run Go Coverage
        run: |
          make go-cover 
